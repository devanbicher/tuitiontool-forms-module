<?php

  /* add a menu item */
  /* the menu item goes to a form, displaying all entries for a selected term (for that content type) */
  /***  try to display all entry types, the viewing by coordinators should be restricted to what they can see anyway */

  /* make a menu item to display the form generating menu item */

  /* MAKE SURE NONE OF MY FUNCTIONS CONFLICT WITH MY OTHER MODULE. */


function tuition_tool_forms_menu(){
  $menu_items = array();

  $menu_items['admin/content/tuition_tool_forms'] = array(
       'title' => 'Tuition Tool Forms',
       'description' => 'Generate the Tution Tool TA/GA Appointment Form',
       'page callback' => 'drupal_get_form',
       'page arguments' => array('tuition_tool_forms_ta_ga'),
       'access arguments' => array('access administration pages'), //this will need to change to be specific for each department.
							  );
  $menu_items['admin/config/tuition_tool_form'] = array(
	'title' => 'Tuition tool form output',
	'description' => 'This is where the forms are generated',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('tuition_tool_ta_ga_form_output'),
	'access arguments' => array('access administration pages'), //this will need to change to be specific for each department.
							   );
							 
  return $menu_items;
  }


function get_years_for_forms(){
  //This function just generates all of the available academic years

  //$years = array('2017','2018'); DEBUG
  $years = array();
  
  $ent_query = new EntityFieldQuery();
  //new entity query to get the years
  $ent_query->entityCondition('entity_type','taxonomy_term')
    ->entityCondition('bundle','academic_year');

  $match_ents = $ent_query->execute(); //execute the query
  
  foreach($match_ents['taxonomy_term'] as $myent){
    $match_ids[] = $myent->tid; //make a list of matching term ids
  }
  $load_years = entity_load('taxonomy_term',$match_ids); //load the objects into an array
  
  foreach($load_years as $curyear){
    $years[$curyear->tid] = $curyear->name; //make an array with a list of year name and taxonomy term id
  }

  arsort($years);
  return $years;
}



function get_terms_for_forms($year){
  //need to use a query function to get terms for the current year.

  //$terms = array('201710','201720','201810','201820'); DEBUG

  $terms = array();
  
  $ent_query = new EntityFieldQuery;

  $ent_query->entityCondition('entity_type','taxonomy_term')
    ->entityCondition('bundle','termcodes');
  
  $match_ents = $ent_query->execute();
  
  foreach($match_ents['taxonomy_term'] as $myent){
    $match_ids[] = $myent->tid;
  }
  $load_terms = entity_load('taxonomy_term',$match_ids);

  uasort($load_terms,'sort_terms_by_code');  //This function is in the tuition tool module
  foreach($load_terms as $curterm){
    $terms[$curterm->tid] = $curterm->name;
  }

  return $terms;

}

function get_ta_students($temp_term, $temp_year){
  $year = variable_get('default_year');
  $term = variable_get('default_term'); //place holder until I can get choosing different terms worked out
  $entry = 'physics_aid_entry'; //place holder until I can work out a better way to figure out how to properly get the right bundle.
  $aid = 'physics_aid_type';
  $students = array();

  //First get the tid of the aid type

  $aid_query = new EntityFieldQuery;
  $aid_query-> entityCondition('entity_type','node')
    ->entityCondition('bundle',$aid)
    ->propertyCondition('title','TA','=')
    ->propertyCondition('status',NODE_PUBLISHED)
    ->fieldCondition('field_term_year','tid',$year,'=');
  
  $match_aid_query = $aid_query->execute();

  $aid_result = array_values($match_aid_query['node']);
  $aid_nid = $aid_result[0]->nid;

  //NOW DO A FIELD QUERY ON THE AID ENTRY AND RETURN A LIST OF RELEVANT VALUES INDEXED BY THE NID

  $entry_query = new EntityFieldQuery;
  $entry_query-> entityCondition('entity_type','node')
    ->entityCondition('bundle',$entry)
    ->propertyCondition('status',NODE_PUBLISHED)
    ->fieldCondition('field_stipend','value',0,'>')//STIPEND
    ->fieldCondition('field_term','tid',$term,'=')
    ->fieldCondition('field_aid_type','target_id',$aid_nid,'=');
  
  $match_entries = $entry_query->execute();
  
  foreach($match_entries['node'] as $myentry){
    $match_ids[] = $myentry->nid;
  }
  $load_entries = entity_load('node',$match_ids);
  
  foreach($load_entries as $curentry){
    $students[$curentry->nid] = array(

      'last' => $curentry->field_student_last_name['und'][0]['value'],
      'first' => $curentry->field_student_first_name['und'][0]['value'],
      'effort' => $curentry->field_effort['und'][0]['value'],
      'periods' => $curentry->field_pay_periods['und'][0]['value'],
      'stipend' =>$curentry->field_stipend['und'][0]['value']
				      );
  }

  //$students = array('bob','jill');

  return $students;
}






/*
function get_ta_entries($dept, $term){
  //for a give department and term find all of the aid type that are TA,
    // return an array that has names dates and stipend.

}
*/


function tuition_tool_forms_ta_ga($form, &$form_state){
  $new_form = drupal_get_form('tuition_tool_forms_ta_ga_form');
    return system_settings_form($new_form);
}


function tuition_tool_forms_ta_ga_form($form, &$form_state){


  // first let the user choose the field, it will be a required field, but it will be defaulted to the variable for the current term.
  //  This will force me to make the first tuition_tool module required. which is good anyway.

  // next make a set of checkboxes, one for each piece of content in which the aid type is TA //

  // the checkboxes should have the key be the node number so I know which nodes to pull data from. //

  $temp_year = 'my_year';
  $temp_term = 'my_term';
  $temp_dept = 'physics';

  $formyears = get_years_for_forms();
  $formterms = get_terms_for_forms($temp_year);
  
  $studentstable = get_ta_students($temp_term, $temp_year);

  $header = array(
		  'last' => 'Last Name',
		  'first' => 'First Name',
		  'effort' => 'Effort',
		  'periods' => 'Pay Periods',
		  'stipend' => 'Stipend'
		  );
  
  /*  DEBUG
  $form['temp_markup'] = array(
			       '#markup' => t('This is some markup to get this pagen started'),
			       );		       
  */  

  $form['set_ta_ga_actions'] = array(
	  '#type' => 'actions',
	  '#weight' => 0,
					  );
  
  $form['set_ta_ga_actions']['set_form_year'] = array(
	'#type' => 'select',						
	'#title' => t('Please select the year from which to generate this form'),
	'#options' => $formyears,
	'#required' => TRUE,
	'#default_value' => variable_get('default_year') //THIS IS one reason WHY TUITION TOOL MODULE IS REQUIRED.
						      );
  
  // I am going to need to alter this if A different option is selected above. 
  $form['set_ta_ga_actions']['set_form_term'] = array(
	'#type' => 'select',
	'#title' => t('Please select Term from which to generate forms'),
	'#options' => $formterms,
      	'#default_value' => variable_get('default_term') //THIS IS WHY TUITION TOOL MODULE IS REQUIRED.
							);

  $form['select_ta_ga_students'] = array(
	'#type' => 'actions',
					 );

  $form['select_ta_ga_students']['choose_students_table'] = array(
	'#type' => 'tableselect',
	'#header' => $header,
	'#options' => $studentstable,
								  );  

  $form['build_appointment_list'] = array(
			  '#type' => 'submit',
			  '#value' => 'Build Form',
			  //'#submit' => array('tuition_tool_forms_ta_ga_form_submit'),
			  '#submit' => array('tuition_tool_forms_ta_ga_submit'),
			  );
  
  if(!empty($form_state['values']['choose_students_table'])){
    //dsm($form_state);

    //lets try to remove the header stuff from displaying.
    $form['#attributes']['class'][] = 'ta-ga-appointment-list';

    //TRY ATTACHING A CSS FILE TO THIS FORM TO GIVE IT THE STYLING YOU NEED!

    unset($form['set_ta_ga_actions']);
    unset($form['select_ta_ga_students']);
    unset($form['build_appointment_list']);

    $student_list = array();
    
    foreach( $form_state['values']['choose_students_table'] as $stud_nid){
      if($stud_nid > 0){
	$student_list[] = $stud_nid;
      }
    }
    	$form['generated_appointment_list'] = array(
						    //'#markup' => '<p style=\'color:red;\'>MARKUP!! Here is the nid: '.$stud_nid.'</p> '
						    '#markup' => generate_appointment_html($student_list,$temp_term,$temp_dept)
						    );

  }
  

  return $form;

  //  return system_settings_form($form);
}

function generate_appointment_html($stud_list,$term,$dept){
  $list_html = '<table><tr>
                           <th>Employee Name</th>
                           <th>Lehigh ID</th>
                           <th>Phone Ext.</th>
                           <th>Start Date</th>
                           <th>End Date</th>
                           <th>Percent Effort</th>
                           <th>Pay Periods</th>
                           <th>Periodic Rate</th>
                           <th>Total Stipend</th>
               </tr>';

  $entities = entity_load('node',$stud_list);

  $total_stipend = 0;
  $total_rate = 0;

  //I NEED TO CHECK TO MAKE SURE THE ACCOUNT NUMBER IS THE SAME
  foreach($entities as $curentry){

    //probably need to reset these so that we don't get old data.
    $name = $curentry->field_student_last_name['und'][0]['value'].', '.$curentry->field_student_first_name['und'][0]['value'];
    $id =  $curentry->field_lin['und'][0]['value'];
    $phone =  $curentry->field_phone['und'][0]['value'];
    $start =  $curentry->field_aid_date['und'][0]['value'];
    $end =  $curentry->field_aid_date['und'][0]['value2'];
    $effort = $curentry->field_effort['und'][0]['value'];
    $periods = $curentry->field_pay_periods['und'][0]['value'];
    $stipend = $curentry->field_stipend['und'][0]['value'];
    $rate = $stipend/$periods;
    //Totals
    $total_stipend = $total_stipend + $stipend;
    $total_rate = $total_rate + $rate;
    
    //create the row
    $thisrow = '<tr><td>'.$name.'</td><td>'.$id.'</td><td>'.$phone.'</td><td>'.$start.'</td><td>'.$end.'</td><td>'.$effort.'</td><td>'.
      $periods.'</td><td>'.$rate.'</td><td>'.$stipend.'</td></tr>';

    //Add the row to the list
    $list_html = $list_html.$thisrow;
      }
  //Don't forget to style this final row differently
  $list_html = $list_html.
    '<tr><td></td><td></td><td></td><td></td><td></td><td></td><td><strong>Totals:</strong></td><td>'.$total_rate.'</td><td>'.$total_stipend
    .'</td></tr></table>';

    return $list_html;
}



function tuition_tool_forms_ta_ga_submit($form, &$form_state){

  //drupal_get_form('tuition_tool_ta_ga_form_output');

  $form_state['rebuild'] = TRUE;
  //$form_state['redirect'] = 'node/1';

  //Let's try to add an attribute to alter the css

  dsm($form_state);

  //  drupal_set_message('here is your message');

}

function tuition_tool_ta_ga_form_output($form, &$form_state){

  dsm($form_state);
  
  return $form;
  
}

